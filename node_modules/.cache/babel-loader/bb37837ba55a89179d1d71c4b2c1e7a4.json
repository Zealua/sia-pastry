{"ast":null,"code":"import _regeneratorRuntime from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\n\nvar TestFireBase = function TestFireBase() {\n  var _this = this;\n\n  _classCallCheck(this, TestFireBase);\n\n  this._apiBase = 'https://testflayhit.firebaseio.com/';\n  this.getResource =\n  /*#__PURE__*/\n  _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"https://testflayhit.firebaseio.com/\");\n\n          case 2:\n            res = _context.sent;\n\n            if (res.ok) {\n              _context.next = 5;\n              break;\n            }\n\n            throw new Error(\"Could not fetch\" + \", received \".concat(res.status));\n\n          case 5:\n            _context.next = 7;\n            return res.json();\n\n          case 7:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  this.getAllPeople =\n  /*#__PURE__*/\n  _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2() {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _this.getResource();\n\n          case 2:\n            res = _context2.sent;\n            console.log(res);\n            return _context2.abrupt(\"return\", res.results.map(_this._transformPerson).slice(0, 5));\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  this.getPerson =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(id) {\n      var person;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _this.getResource(\"/people/\".concat(id, \"/\"));\n\n            case 2:\n              person = _context3.sent;\n              return _context3.abrupt(\"return\", _this._transformPerson(person));\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  this.getAllPlanets =\n  /*#__PURE__*/\n  _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4() {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _this.getResource(\"/planets/\");\n\n          case 2:\n            res = _context4.sent;\n            return _context4.abrupt(\"return\", res.results.map(_this._transformPlanet).slice(0, 5));\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  this.getPlanet =\n  /*#__PURE__*/\n  function () {\n    var _ref5 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5(id) {\n      var planet;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _this.getResource(\"/planets/\".concat(id, \"/\"));\n\n            case 2:\n              planet = _context5.sent;\n              return _context5.abrupt(\"return\", _this._transformPlanet(planet));\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function (_x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  this.getAllStarships =\n  /*#__PURE__*/\n  _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee6() {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _this.getResource(\"/starships/\");\n\n          case 2:\n            res = _context6.sent;\n            return _context6.abrupt(\"return\", res.results.map(_this._transformStarship).slice(0, 5));\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  this.getStarship =\n  /*#__PURE__*/\n  function () {\n    var _ref7 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee7(id) {\n      var starship;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return _this.getResource(\"/starships/\".concat(id, \"/\"));\n\n            case 2:\n              starship = _context7.sent;\n              return _context7.abrupt(\"return\", _this._transformStarship(starship));\n\n            case 4:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function (_x3) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  this._extractId = function (item) {\n    var idRegExp = /\\/([0-9]*)\\/$/;\n    return item.url.match(idRegExp)[1];\n  };\n\n  this._transformPlanet = function (planet) {\n    return {\n      id: _this._extractId(planet),\n      name: planet.name,\n      diameter: planet.diameter,\n      gravity: planet.gravity,\n      orbitalPeriod: planet.orbital_period,\n      population: planet.population,\n      terrain: planet.terrain,\n      climate: planet.climate,\n      rotationPeriod: planet.rotation_period\n    };\n  };\n\n  this._transformStarship = function (starship) {\n    return {\n      id: _this._extractId(starship),\n      name: starship.name,\n      model: starship.model,\n      manufacturer: starship.manufacturer,\n      costInCredits: starship.cost_in_credits,\n      length: starship.length,\n      crew: starship.crew,\n      passengers: starship.passengers,\n      cargoCapacity: starship.cargo_capacity\n    };\n  };\n\n  this._transformPerson = function (hits) {\n    return {\n      text: hits.origin\n    };\n  };\n};\n\nexport { TestFireBase as default };","map":{"version":3,"sources":["d:\\My\\react\\star-db\\src\\services\\test-firebase.js"],"names":["TestFireBase","_apiBase","getResource","fetch","res","ok","Error","status","json","getAllPeople","console","log","results","map","_transformPerson","slice","getPerson","id","person","getAllPlanets","_transformPlanet","getPlanet","planet","getAllStarships","_transformStarship","getStarship","starship","_extractId","item","idRegExp","url","match","name","diameter","gravity","orbitalPeriod","orbital_period","population","terrain","climate","rotationPeriod","rotation_period","model","manufacturer","costInCredits","cost_in_credits","length","crew","passengers","cargoCapacity","cargo_capacity","hits","text","origin"],"mappings":"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","sourcesContent":["export default class TestFireBase {\r\n\r\n    _apiBase = 'https://testflayhit.firebaseio.com/';\r\n  \r\n    getResource = async () => {\r\n      const res = await fetch(`https://testflayhit.firebaseio.com/`);\r\n  \r\n      if (!res.ok) {\r\n        throw new Error(`Could not fetch` +\r\n          `, received ${res.status}`)\r\n      }\r\n      return await res.json();\r\n    };\r\n  \r\n    getAllPeople = async () => {\r\n      const res = await this.getResource();\r\n      console.log(res);\r\n      return res.results\r\n        .map(this._transformPerson)\r\n        .slice(0, 5);\r\n    };\r\n  \r\n    getPerson = async (id) => {\r\n      const person = await this.getResource(`/people/${id}/`);\r\n      return this._transformPerson(person);\r\n    };\r\n  \r\n    getAllPlanets = async () => {\r\n      const res = await this.getResource(`/planets/`);\r\n      return res.results\r\n        .map(this._transformPlanet)\r\n        .slice(0, 5);\r\n    };\r\n  \r\n    getPlanet = async (id) => {\r\n      const planet = await this.getResource(`/planets/${id}/`);\r\n      return this._transformPlanet(planet);\r\n    };\r\n  \r\n    getAllStarships = async () => {\r\n      const res = await this.getResource(`/starships/`);\r\n      return res.results\r\n        .map(this._transformStarship)\r\n        .slice(0, 5);\r\n    };\r\n  \r\n    getStarship = async (id) => {\r\n      const starship = await this.getResource(`/starships/${id}/`);\r\n      return this._transformStarship(starship);\r\n    };\r\n  \r\n    _extractId = (item) => {\r\n      const idRegExp = /\\/([0-9]*)\\/$/;\r\n      return item.url.match(idRegExp)[1];\r\n    };\r\n  \r\n    _transformPlanet = (planet) => {\r\n      return {\r\n        id: this._extractId(planet),\r\n        name: planet.name,\r\n        diameter: planet.diameter,\r\n        gravity: planet.gravity,\r\n        orbitalPeriod: planet.orbital_period,\r\n        population: planet.population,\r\n        terrain: planet.terrain,\r\n        climate: planet.climate,\r\n        rotationPeriod: planet.rotation_period,\r\n      };\r\n    };\r\n  \r\n    _transformStarship = (starship) => {\r\n      return {\r\n        id: this._extractId(starship),\r\n        name: starship.name,\r\n        model: starship.model,\r\n        manufacturer: starship.manufacturer,\r\n        costInCredits: starship.cost_in_credits,\r\n        length: starship.length,\r\n        crew: starship.crew,\r\n        passengers: starship.passengers,\r\n        cargoCapacity: starship.cargo_capacity\r\n      }\r\n    };\r\n  \r\n    _transformPerson = (hits) => {\r\n      return {\r\n        text: hits.origin\r\n      }\r\n    }\r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}