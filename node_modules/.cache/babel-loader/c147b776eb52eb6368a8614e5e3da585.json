{"ast":null,"code":"import _classCallCheck from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"d:\\\\My\\\\react\\\\star-db\\\\src\\\\Componennt\\\\random-planet\\\\random-planet.js\";\nimport React from 'react';\nimport SwapiService from '../../Services/swapi-service';\nimport Spiner from '../Spiner/spiner';\nimport './random-planet.css';\n\nvar RandomPlanet =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RandomPlanet, _React$Component);\n\n  function RandomPlanet() {\n    var _this;\n\n    _classCallCheck(this, RandomPlanet);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RandomPlanet).call(this));\n    _this.state = {\n      planetS: {},\n      loadEdn: false,\n      catchError: false\n    };\n    _this.swip = new SwapiService();\n\n    _this.onErr = function (err) {\n      _this.setState({\n        catchError: true\n      });\n    };\n\n    setInterval(_this.updatePlanet(), 3000);\n    return _this;\n  }\n\n  _createClass(RandomPlanet, [{\n    key: \"updatePlanet\",\n    value: function updatePlanet() {\n      var _this2 = this;\n\n      var id = 1200; //Math.floor(Math.random()*24+2);\n\n      this.swip.getPlanet(id).then(function (el) {\n        _this2.setState({\n          planetS: el,\n          loadEdn: true\n        });\n      }).catch(this.onErr);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state$planetS = this.state.planetS,\n          id = _this$state$planetS.id,\n          name = _this$state$planetS.name,\n          population = _this$state$planetS.population,\n          rotation_period = _this$state$planetS.rotation_period,\n          diameter = _this$state$planetS.diameter;\n\n      var IfLoad = function IfLoad() {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"planet-image\",\n          src: \"https://starwars-visualguide.com/assets/img/planets/\".concat(id, \".jpg\"),\n          alt: \"pict show: \".concat(id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"flex-column\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          className: \"test\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, name), React.createElement(\"ul\", {\n          className: \"list-group-flash\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          className: \" list-group-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"term\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \"Population  \"), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, population)), React.createElement(\"li\", {\n          className: \"list-group-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"term\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \"Rotation Period\"), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, rotation_period)), React.createElement(\"li\", {\n          className: \" list-group-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"term\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \"Diametr\"), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, diameter)))));\n      };\n\n      var ShowEl = this.state.catchError ? showError : this.state.loadEdn ? IfLoad : Spiner;\n      return React.createElement(\"div\", {\n        className: \"random-planet list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(ShowEl, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return RandomPlanet;\n}(React.Component);\n\nexport { RandomPlanet as default };\n\nvar showError = function showError() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Worning!!! \\n            NO PLANET\"));\n};","map":{"version":3,"sources":["d:\\My\\react\\star-db\\src\\Componennt\\random-planet\\random-planet.js"],"names":["React","SwapiService","Spiner","RandomPlanet","state","planetS","loadEdn","catchError","swip","onErr","err","setState","setInterval","updatePlanet","id","getPlanet","then","el","catch","name","population","rotation_period","diameter","IfLoad","ShowEl","showError","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport SwapiService from '../../Services/swapi-service'\r\nimport Spiner from '../Spiner/spiner'\r\n\r\nimport './random-planet.css'\r\n\r\nexport default class RandomPlanet extends React.Component {\r\n\r\n   state = {\r\n       planetS : { },\r\n       loadEdn: false,\r\n       catchError:false\r\n   }\r\n\r\n   constructor(){\r\n       super();\r\n       setInterval(this.updatePlanet(),3000);\r\n   }\r\n\r\n   swip = new SwapiService();\r\n   onErr = (err) => {\r\n        this.setState({catchError:true});\r\n   }; \r\n\r\n\r\n\r\n   updatePlanet(){\r\n      const id = 1200;//Math.floor(Math.random()*24+2);\r\n      this.swip.getPlanet(id)\r\n          .then((el)=>{\r\n                 this.setState({planetS:el,loadEdn:true});    \r\n           })\r\n          .catch(this.onErr);\r\n     };\r\n\r\nrender(){ \r\n\r\n   const {id,name,population,rotation_period,diameter} = this.state.planetS;\r\n\r\n   const IfLoad = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <img className=\"planet-image\"\r\n                src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`} alt={`pict show: ${id}`} />\r\n            <div className=\"flex-column\">\r\n                <h4 className=\"test\">{name}</h4>\r\n                <ul className=\"list-group-flash\">\r\n                    <li className=\" list-group-item\">\r\n                        <span className=\"term\">Population  </span>\r\n                        <span>{population}</span>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <span className=\"term\">Rotation Period</span>\r\n                        <span>{rotation_period}</span>\r\n                    </li>\r\n                    <li className=\" list-group-item\">\r\n                        <span className=\"term\">Diametr</span>\r\n                        <span>{diameter}</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </React.Fragment>);\r\n    }\r\n\r\nconst ShowEl = this.state.catchError?showError:this.state.loadEdn?IfLoad:Spiner;\r\n\r\nreturn(\r\n       <div   className=\"random-planet list-group-item\">\r\n           <ShowEl/>\r\n       </div>\r\n   );\r\n};\r\n}\r\n\r\n\r\nconst showError = () => {\r\n    return (\r\n        <div>\r\n            <h1>{`Worning!!! \r\n            NO PLANET`}</h1>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}