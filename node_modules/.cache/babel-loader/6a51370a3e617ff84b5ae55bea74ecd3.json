{"ast":null,"code":"import _regeneratorRuntime from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\n\nvar SwapiService = function SwapiService() {\n  var _this = this;\n\n  _classCallCheck(this, SwapiService);\n\n  this._apiBase = 'https://swapi.co/api';\n\n  this.getResource =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(url) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"\".concat(_this._apiBase).concat(url));\n\n            case 2:\n              res = _context.sent;\n\n              if (res.ok) {\n                _context.next = 5;\n                break;\n              }\n\n              throw new Error(\"Could not fetch \".concat(url) + \", received \".concat(res.status));\n\n            case 5:\n              _context.next = 7;\n              return res.json();\n\n            case 7:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  this.getAllPeople =\n  /*#__PURE__*/\n  _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2() {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _this.getResource(\"/people/\");\n\n          case 2:\n            res = _context2.sent;\n            return _context2.abrupt(\"return\", res.results.map(_this._transformPerson).slice(0, 5));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  this.getPerson =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(id) {\n      var person;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _this.getResource(\"/people/\".concat(id, \"/\"));\n\n            case 2:\n              person = _context3.sent;\n              return _context3.abrupt(\"return\", _this._transformPerson(person));\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  this.getAllPlanets =\n  /*#__PURE__*/\n  _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4() {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _this.getResource(\"/planets/\");\n\n          case 2:\n            res = _context4.sent;\n            return _context4.abrupt(\"return\", res.results.map(_this._transformPlanet).slice(0, 5));\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  this.getPlanet =\n  /*#__PURE__*/\n  function () {\n    var _ref5 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5(id) {\n      var planet;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _this.getResource(\"/planets/\".concat(id, \"/\"));\n\n            case 2:\n              planet = _context5.sent;\n              return _context5.abrupt(\"return\", _this._transformPlanet(planet));\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function (_x3) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  this.getAllStarships =\n  /*#__PURE__*/\n  _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee6() {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return _this.getResource(\"/starships/\");\n\n          case 2:\n            res = _context6.sent;\n            return _context6.abrupt(\"return\", res.results.map(_this._transformStarship).slice(0, 5));\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  this.getStarship =\n  /*#__PURE__*/\n  function () {\n    var _ref7 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee7(id) {\n      var starship;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return _this.getResource(\"/starships/\".concat(id, \"/\"));\n\n            case 2:\n              starship = _context7.sent;\n              return _context7.abrupt(\"return\", _this._transformStarship(starship));\n\n            case 4:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function (_x4) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  this._extractId = function (item) {\n    var idRegExp = /\\/([0-9]*)\\/$/;\n    return item.url.match(idRegExp)[1];\n  };\n\n  this._transformPlanet = function (planet) {\n    return {\n      id: _this._extractId(planet),\n      name: planet.name,\n      diameter: planet.diameter,\n      gravity: planet.gravity,\n      orbitalPeriod: planet.orbital_period,\n      population: planet.population,\n      terrain: planet.terrain,\n      climate: planet.climate,\n      rotationPeriod: planet.rotation_period\n    };\n  };\n\n  this._transformStarship = function (starship) {\n    return {\n      id: _this._extractId(starship),\n      name: starship.name,\n      model: starship.model,\n      manufacturer: starship.manufacturer,\n      costInCredits: starship.cost_in_credits,\n      length: starship.length,\n      crew: starship.crew,\n      passengers: starship.passengers,\n      cargoCapacity: starship.cargo_capacity\n    };\n  };\n\n  this._transformPerson = function (person) {\n    return {\n      id: _this._extractId(person),\n      name: person.name,\n      gender: person.gender,\n      birthYear: person.birth_year,\n      eyeColor: person.eye_color\n    };\n  };\n};\n\nexport { SwapiService as default };","map":{"version":3,"sources":["d:\\My\\react\\star-db\\src\\services\\swapi-service.js"],"names":["SwapiService","_apiBase","getResource","url","fetch","res","ok","Error","status","json","getAllPeople","results","map","_transformPerson","slice","getPerson","id","person","getAllPlanets","_transformPlanet","getPlanet","planet","getAllStarships","_transformStarship","getStarship","starship","_extractId","item","idRegExp","match","name","diameter","gravity","orbitalPeriod","orbital_period","population","terrain","climate","rotationPeriod","rotation_period","model","manufacturer","costInCredits","cost_in_credits","length","crew","passengers","cargoCapacity","cargo_capacity","gender","birthYear","birth_year","eyeColor","eye_color"],"mappings":"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","sourcesContent":["export default class SwapiService {\n\n  _apiBase = 'https://swapi.co/api';\n\n  getResource = async (url) => {\n    const res = await fetch(`${this._apiBase}${url}`);\n\n    if (!res.ok) {\n      throw new Error(`Could not fetch ${url}` +\n        `, received ${res.status}`)\n    }\n    return await res.json();\n  };\n\n  getAllPeople = async () => {\n    const res = await this.getResource(`/people/`);\n    return res.results\n      .map(this._transformPerson)\n      .slice(0, 5);\n  };\n\n  getPerson = async (id) => {\n    const person = await this.getResource(`/people/${id}/`);\n    return this._transformPerson(person);\n  };\n\n  getAllPlanets = async () => {\n    const res = await this.getResource(`/planets/`);\n    return res.results\n      .map(this._transformPlanet)\n      .slice(0, 5);\n  };\n\n  getPlanet = async (id) => {\n    const planet = await this.getResource(`/planets/${id}/`);\n    return this._transformPlanet(planet);\n  };\n\n  getAllStarships = async () => {\n    const res = await this.getResource(`/starships/`);\n    return res.results\n      .map(this._transformStarship)\n      .slice(0, 5);\n  };\n\n  getStarship = async (id) => {\n    const starship = await this.getResource(`/starships/${id}/`);\n    return this._transformStarship(starship);\n  };\n\n  _extractId = (item) => {\n    const idRegExp = /\\/([0-9]*)\\/$/;\n    return item.url.match(idRegExp)[1];\n  };\n\n  _transformPlanet = (planet) => {\n    return {\n      id: this._extractId(planet),\n      name: planet.name,\n      diameter: planet.diameter,\n      gravity: planet.gravity,\n      orbitalPeriod: planet.orbital_period,\n      population: planet.population,\n      terrain: planet.terrain,\n      climate: planet.climate,\n      rotationPeriod: planet.rotation_period,\n    };\n  };\n\n  _transformStarship = (starship) => {\n    return {\n      id: this._extractId(starship),\n      name: starship.name,\n      model: starship.model,\n      manufacturer: starship.manufacturer,\n      costInCredits: starship.cost_in_credits,\n      length: starship.length,\n      crew: starship.crew,\n      passengers: starship.passengers,\n      cargoCapacity: starship.cargo_capacity\n    }\n  };\n\n  _transformPerson = (person) => {\n    return {\n      id: this._extractId(person),\n      name: person.name,\n      gender: person.gender,\n      birthYear: person.birth_year,\n      eyeColor: person.eye_color\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}