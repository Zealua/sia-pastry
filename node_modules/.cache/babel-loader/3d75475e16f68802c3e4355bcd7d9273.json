{"ast":null,"code":"import _regeneratorRuntime from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\nvar SwapiService =\n/*#__PURE__*/\nfunction () {\n  function SwapiService() {\n    var _this = this;\n\n    _classCallCheck(this, SwapiService);\n\n    this._apiBase = 'https://swapi.co/api';\n    this.getAllPeople =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.getResourse(\"/people/\");\n\n            case 2:\n              res = _context.sent;\n              return _context.abrupt(\"return\", res.results);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    this.getPerson =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(id) {\n        var el, person;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _this.getResourse(\"/people/\".concat(id, \"/\"));\n\n              case 2:\n                el = _context2.sent;\n                person = {\n                  id: id,\n                  name: el.name,\n                  gender: el.gender,\n                  birth_year: el.birth_year,\n                  eye_color: el.eye_color\n                };\n                return _context2.abrupt(\"return\", person);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    this.getAllPlanets =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _this.getResourse(\"/planets/\");\n\n            case 2:\n              res = _context3.sent;\n              return _context3.abrupt(\"return\", res.results);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    this.getPlanet =\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(id) {\n        var el, planet;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return _this.getResourse(\"/planets/\".concat(id, \"/\"));\n\n              case 2:\n                el = _context4.sent;\n                planet = {\n                  id: id,\n                  name: el.name,\n                  population: el.population,\n                  rotation_period: el.rotation_period,\n                  diameter: el.diameter,\n                  climate: el.climate,\n                  surface_water: el.surface_water\n                };\n                return _context4.abrupt(\"return\", planet);\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n  }\n\n  _createClass(SwapiService, [{\n    key: \"getResourse\",\n    value: function () {\n      var _getResourse = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(url) {\n        var res, body;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return fetch(\"\".concat(this._apiBase).concat(url));\n\n              case 2:\n                res = _context5.sent;\n\n                if (res.ok) {\n                  _context5.next = 5;\n                  break;\n                }\n\n                throw new Error('missing ' + res.status);\n\n              case 5:\n                _context5.next = 7;\n                return res.json();\n\n              case 7:\n                body = _context5.sent;\n                return _context5.abrupt(\"return\", body);\n\n              case 9:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function getResourse(_x3) {\n        return _getResourse.apply(this, arguments);\n      }\n\n      return getResourse;\n    }()\n  }, {\n    key: \"getAllStarships\",\n    value: function () {\n      var _getAllStarships = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.getResourse(\"/starships/\");\n\n              case 2:\n                res = _context6.sent;\n                return _context6.abrupt(\"return\", res.results);\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function getAllStarships() {\n        return _getAllStarships.apply(this, arguments);\n      }\n\n      return getAllStarships;\n    }()\n  }, {\n    key: \"getStarShip\",\n    value: function getStarShip(id) {\n      return this.getResourse(\"/starships/\".concat(id, \"/\"));\n    }\n  }]);\n\n  return SwapiService;\n}();\n\nexport { SwapiService as default };","map":{"version":3,"sources":["d:\\My\\react\\star-db\\src\\Services\\swapi-service.js"],"names":["SwapiService","_apiBase","getAllPeople","getResourse","res","results","getPerson","id","el","person","name","gender","birth_year","eye_color","getAllPlanets","getPlanet","planet","population","rotation_period","diameter","climate","surface_water","url","fetch","ok","Error","status","json","body"],"mappings":";;;;;IAAqBA,Y;;;;;;;;SAEjBC,Q,GAAW,sB;SAYXC,Y;;;;6BAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACQ,KAAI,CAACC,WAAL,YADR;;AAAA;AACJC,cAAAA,GADI;AAAA,+CAEHA,GAAG,CAACC,OAFD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;SAKdC,S;;;;;+BAAY,kBAAMC,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACS,KAAI,CAACJ,WAAL,mBAA4BI,EAA5B,OADT;;AAAA;AACFC,gBAAAA,EADE;AAEFC,gBAAAA,MAFE,GAEO;AACXF,kBAAAA,EAAE,EAAFA,EADW;AAEXG,kBAAAA,IAAI,EAACF,EAAE,CAACE,IAFG;AAGfC,kBAAAA,MAAM,EAACH,EAAE,CAACG,MAHK;AAIfC,kBAAAA,UAAU,EAACJ,EAAE,CAACI,UAJC;AAKfC,kBAAAA,SAAS,EAACL,EAAE,CAACK;AALE,iBAFP;AAAA,kDAQDJ,MARC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;SAoBZK,a;;;;6BAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACM,KAAI,CAACX,WAAL,aADN;;AAAA;AACNC,cAAAA,GADM;AAAA,gDAELA,GAAG,CAACC,OAFC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;SAKhBU,S;;;;;+BAAU,kBAAMR,EAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACW,KAAI,CAACJ,WAAL,oBAA6BI,EAA7B,OADX;;AAAA;AACAC,gBAAAA,EADA;AAEAQ,gBAAAA,MAFA,GAEO;AAACT,kBAAAA,EAAE,EAACA,EAAJ;AACTG,kBAAAA,IAAI,EAACF,EAAE,CAACE,IADC;AAETO,kBAAAA,UAAU,EAACT,EAAE,CAACS,UAFL;AAGTC,kBAAAA,eAAe,EAACV,EAAE,CAACU,eAHV;AAITC,kBAAAA,QAAQ,EAACX,EAAE,CAACW,QAJH;AAKTC,kBAAAA,OAAO,EAACZ,EAAE,CAACY,OALF;AAMTC,kBAAAA,aAAa,EAACb,EAAE,CAACa;AANR,iBAFP;AAAA,kDASCL,MATD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;;iDAxCSM,G;;;;;;;uBACGC,KAAK,WAAI,KAAKtB,QAAT,SAAoBqB,GAApB,E;;;AAAjBlB,gBAAAA,G;;oBAEFA,GAAG,CAACoB,E;;;;;sBACE,IAAIC,KAAJ,CAAY,aAAWrB,GAAG,CAACsB,MAA3B,C;;;;uBAEStB,GAAG,CAACuB,IAAJ,E;;;AAAbC,gBAAAA,I;kDACCA,I;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAoBW,KAAKzB,WAAL,e;;;AAAZC,gBAAAA,G;kDACCA,GAAG,CAACC,O;;;;;;;;;;;;;;;;;;gCAGHE,E,EAAG;AACX,aAAO,KAAKJ,WAAL,sBAA+BI,EAA/B,OAAP;AACH;;;;;;SArCgBP,Y","sourcesContent":["export default class SwapiService {\r\n\r\n    _apiBase = 'https://swapi.co/api';\r\n\r\n    async getResourse (url) {\r\n        const res = await fetch(`${this._apiBase}${url}`); \r\n\r\n        if(!res.ok){\r\n            throw new Error ( 'missing '+res.status);\r\n        }\r\n        const body = await res.json();\r\n        return body;\r\n    };\r\n\r\n    getAllPeople= async()=>{\r\n        const res = await this.getResourse(`/people/`);\r\n        return res.results;\r\n    }\r\n    \r\n    getPerson = async(id)=>{\r\n        const el = await this.getResourse(`/people/${id}/`);\r\n        const person = {\r\n            id,\r\n            name:el.name,\r\n        gender:el.gender,\r\n        birth_year:el.birth_year,\r\n        eye_color:el.eye_color};\r\n        return person;\r\n    } \r\n    \r\n    async getAllStarships(){\r\n        const res = await this.getResourse(`/starships/`);\r\n        return res.results;\r\n    }\r\n    \r\n    getStarShip(id){\r\n        return this.getResourse(`/starships/${id}/`);\r\n    }   \r\n\r\n    getAllPlanets = async() => {\r\n        const res = await this.getResourse(`/planets/`);\r\n        return res.results;\r\n    }\r\n    \r\n    getPlanet=async(id)=>{\r\n        const el = await this.getResourse(`/planets/${id}/`)\r\n        const planet={id:id,\r\n            name:el.name,\r\n            population:el.population,\r\n            rotation_period:el.rotation_period,\r\n            diameter:el.diameter,\r\n            climate:el.climate,\r\n            surface_water:el.surface_water}\r\n        return planet;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}