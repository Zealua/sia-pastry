{"ast":null,"code":"import _regeneratorRuntime from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"d:\\\\My\\\\react\\\\star-db\\\\src\\\\Componennt\\\\itom-list\\\\itom-list.js\";\nimport React from 'react';\nimport SwapiService from '../../Services/swapi-service';\nimport './itom-list.css';\n\nvar ItomList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ItomList, _React$Component);\n\n  function ItomList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ItomList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ItomList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      people: {\n        name: \"\",\n        birth_year: '',\n        rotation_period: \"\",\n        diameter: ''\n      }\n    };\n    return _this;\n  }\n\n  _createClass(ItomList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var swip = new SwapiService();\n      swip.getPerson(1).then(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(el) {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return _this2.setState({\n                    name: el.name,\n                    birth_year: el.birth_year,\n                    rotation_period: el.rotation_period,\n                    diameter: el.diameter\n                  });\n\n                case 2:\n                  console.log(el);\n\n                case 3:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()); //const {name, rotation_period,orbital_period,diameter }=planetC;\n      // console.log(name +' '+ rotation_period+\" \"+orbital_period+' '+diameter)   \n\n      return React.createElement(\"div\", {\n        className: \"random-planet list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"list-group-flash\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \" list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"term\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, this.state.name, \"(\", this.state.birth_year, \")\")), React.createElement(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"term\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Rotation Period\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, this.state.rotation_period)), React.createElement(\"li\", {\n        className: \" list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"term\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Diametr\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, this.state.diameter))));\n    }\n  }]);\n\n  return ItomList;\n}(React.Component);\n\nexport { ItomList as default };","map":{"version":3,"sources":["d:\\My\\react\\star-db\\src\\Componennt\\itom-list\\itom-list.js"],"names":["React","SwapiService","ItomList","state","people","name","birth_year","rotation_period","diameter","swip","getPerson","then","el","setState","console","log","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA,OAAO,iBAAP;;IAEqBC,Q;;;;;;;;;;;;;;;;;UAElBC,K,GAAQ;AACJC,MAAAA,MAAM,EAAG;AAACC,QAAAA,IAAI,EAAC,EAAN;AACCC,QAAAA,UAAU,EAAC,EADZ;AAEEC,QAAAA,eAAe,EAAE,EAFnB;AAGEC,QAAAA,QAAQ,EAAC;AAHX;AADL,K;;;;;;6BAOA;AAAA;;AACR,UAAMC,IAAI,GAAG,IAAIR,YAAJ,EAAb;AAEAQ,MAAAA,IAAI,CAACC,SAAL,CAAe,CAAf,EAAkBC,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAuB,iBAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACZ,MAAI,CAACC,QAAL,CAAc;AAACR,oBAAAA,IAAI,EAACO,EAAE,CAACP,IAAT;AACLC,oBAAAA,UAAU,EAACM,EAAE,CAACN,UADT;AAELC,oBAAAA,eAAe,EAACK,EAAE,CAACL,eAFd;AAGLC,oBAAAA,QAAQ,EAACI,EAAE,CAACJ;AAHP,mBAAd,CADY;;AAAA;AAKrBM,kBAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ;;AALqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvB;;AAAA;AAAA;AAAA;AAAA,WAHQ,CAWR;AACD;;AAEC,aACI;AAAO,QAAA,SAAS,EAAC,+BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAG,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACO;AAAM,QAAA,SAAS,EAAE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyB,KAAKT,KAAL,CAAWE,IAApC,OAA2C,KAAKF,KAAL,CAAWG,UAAtD,MADP,CADF,EAIK;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKH,KAAL,CAAWI,eAAlB,CAFJ,CAJL,EAQK;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKJ,KAAL,CAAWK,QAAlB,CAFJ,CARL,CADJ,CADJ;AAiBF;;;;EAxCqCR,KAAK,CAACgB,S;;SAAvBd,Q","sourcesContent":["import React from 'react'\r\nimport SwapiService from '../../Services/swapi-service'\r\n\r\nimport './itom-list.css'\r\n\r\nexport default class ItomList extends React.Component {\r\n\r\n   state = {\r\n       people : {name:\"\",\r\n                 birth_year:'',\r\n                  rotation_period: \"\",\r\n                  diameter:''}\r\n   }\r\n\r\n   render(){ \r\n   const swip = new SwapiService();\r\n \r\n   swip.getPerson(1).then(async (el)=>{\r\n        await this.setState({name:el.name,\r\n                       birth_year:el.birth_year,\r\n                       rotation_period:el.rotation_period,\r\n                       diameter:el.diameter});    \r\n     console.log(el);\r\n    });\r\n\r\n   //const {name, rotation_period,orbital_period,diameter }=planetC;\r\n  // console.log(name +' '+ rotation_period+\" \"+orbital_period+' '+diameter)   \r\n\r\n   return(\r\n       <div   className=\"random-planet list-group-item\">\r\n           <ul className = \"list-group-flash\">\r\n             <li className=\" list-group-item\">\r\n                    <span className= \"term\">{this.state.name}({this.state.birth_year})</span>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <span className= \"term\">Rotation Period</span>\r\n                    <span>{this.state.rotation_period}</span>\r\n                </li>\r\n                <li className=\" list-group-item\">\r\n                    <span className= \"term\">Diametr</span>\r\n                    <span>{this.state.diameter}</span>\r\n                </li>\r\n             </ul>\r\n        </div>\r\n   );\r\n};\r\n}\r\n"]},"metadata":{},"sourceType":"module"}