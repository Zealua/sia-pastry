{"ast":null,"code":"import _regeneratorRuntime from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"d:\\\\My\\\\react\\\\star-db\\\\src\\\\Componennt\\\\itom-list\\\\itom-list.js\";\nimport React from 'react';\nimport SwapiService from '../../Services/swapi-service';\nimport './itom-list.css';\n\nvar ItomList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ItomList, _React$Component);\n\n  function ItomList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ItomList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ItomList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      people: []\n    };\n    return _this;\n  }\n\n  _createClass(ItomList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var swip = new SwapiService();\n      swip.getAllPeople().then(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(el) {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return _this2.setState({\n                    people: el.map(function (el) {\n                      return el;\n                    })\n                  });\n\n                case 2:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n      var id = 1;\n      var element = this.state.people.map(function (el) {\n        id++;\n        var name = el.name,\n            birth_year = el.birth_year;\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"button\",\n          class: \"btn btn-secondary btn-zeal\",\n          onClick: _this2.props.usinItem(id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, name, \" \", birth_year));\n      }); //const {name, rotation_period,orbital_period,diameter }=planetC;\n      // console.log(name +' '+ rotation_period+\" \"+orbital_period+' '+diameter)   \n\n      return React.createElement(\"ul\", {\n        className: \"itom-list list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, element);\n    }\n  }]);\n\n  return ItomList;\n}(React.Component); //    onClick={this.props.usinItem(id)}\n\n\nexport { ItomList as default };","map":{"version":3,"sources":["d:\\My\\react\\star-db\\src\\Componennt\\itom-list\\itom-list.js"],"names":["React","SwapiService","ItomList","state","people","swip","getAllPeople","then","el","setState","map","id","element","name","birth_year","props","usinItem","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA,OAAO,iBAAP;;IAEqBC,Q;;;;;;;;;;;;;;;;;UAElBC,K,GAAQ;AACJC,MAAAA,MAAM,EAAG;AADL,K;;;;;;6BAIA;AAAA;;AACR,UAAMC,IAAI,GAAG,IAAIJ,YAAJ,EAAb;AAEAI,MAAAA,IAAI,CAACC,YAAL,GAAoBC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAyB,iBAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACd,MAAI,CAACC,QAAL,CAAc;AAACL,oBAAAA,MAAM,EAACI,EAAE,CAACE,GAAH,CAAO,UAACF,EAAD;AAAA,6BAAMA,EAAN;AAAA,qBAAP;AAAR,mBAAd,CADc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAzB;;AAAA;AAAA;AAAA;AAAA;AAGC,UAAIG,EAAE,GAAC,CAAP;AACA,UAAMC,OAAO,GAAG,KAAKT,KAAL,CAAWC,MAAX,CAAkBM,GAAlB,CAAsB,UAACF,EAAD,EAAM;AACjCG,QAAAA,EAAE;AAD+B,YAE1BE,IAF0B,GAEPL,EAFO,CAE1BK,IAF0B;AAAA,YAErBC,UAFqB,GAEPN,EAFO,CAErBM,UAFqB;AAGjC,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,KAAK,EAAC,4BAA5B;AACC,UAAA,OAAO,EAAE,MAAI,CAACC,KAAL,CAAWC,QAAX,CAAoBL,EAApB,CADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEEE,IAFF,OAESC,UAFT,CAAJ,CADJ;AAKV,OARe,CAAhB,CAPO,CAgBR;AACD;;AAEC,aACO;AAAI,QAAA,SAAS,EAAG,2BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIF,OADJ,CADP;AAKF;;;;EA9BqCZ,KAAK,CAACiB,S,GAgC5C;;;SAhCqBf,Q","sourcesContent":["import React from 'react'\r\nimport SwapiService from '../../Services/swapi-service'\r\n\r\nimport './itom-list.css'\r\n\r\nexport default class ItomList extends React.Component {\r\n\r\n   state = {\r\n       people : []\r\n       };\r\n\r\n   render(){ \r\n   const swip = new SwapiService();\r\n \r\n   swip.getAllPeople().then(async (el)=>{\r\n        await this.setState({people:el.map((el)=>el)}); \r\n    });\r\n    let id=1;\r\n    const element = this.state.people.map((el)=>{\r\n               id++;  \r\n               const {name,birth_year} = el;\r\n               return (\r\n                   <li><button type=\"button\" class=\"btn btn-secondary btn-zeal\"\r\n                        onClick={this.props.usinItem(id)}\r\n                       >{name} {birth_year}</button></li>\r\n               )\r\n    })\r\n   //const {name, rotation_period,orbital_period,diameter }=planetC;\r\n  // console.log(name +' '+ rotation_period+\" \"+orbital_period+' '+diameter)   \r\n\r\n   return(\r\n          <ul className = \"itom-list list-group-item\">\r\n             {element}\r\n         </ul>\r\n   );\r\n};\r\n}\r\n//    onClick={this.props.usinItem(id)}"]},"metadata":{},"sourceType":"module"}