{"ast":null,"code":"import _classCallCheck from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"d:\\\\My\\\\react\\\\star-db\\\\src\\\\components\\\\app\\\\app.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, IndexRoute } from 'react-router-dom'; //BrowserRouter\n\nimport Header from '../header';\nimport RandomPlanet from '../random-planet';\nimport ErrorButton from '../error-button';\nimport ErrorIndicator from '../error-indicator';\nimport PeoplePage from '../people-page';\nimport PlanetPage from '../planet-page';\nimport TestFireBase from '../../services/test-firebase';\nimport './app.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.TestFireBase = new TestFireBase();\n    _this.state = {\n      showRandomPlanet: true,\n      hasError: false\n    };\n\n    _this.toggleRandomPlanet = function () {\n      console.log(_this.props);\n      console.log('hi');\n\n      _this.setState(function (state) {\n        return {\n          showRandomPlanet: !state.showRandomPlanet\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidCatch\",\n    value: function componentDidCatch() {\n      this.setState({\n        hasError: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.hasError) {\n        return React.createElement(ErrorIndicator, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        });\n      }\n\n      var planet = this.state.showRandomPlanet ? React.createElement(RandomPlanet, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }) : null;\n      var test = this.props.path;\n      return React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        classNam: \"stardb-app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), planet, React.createElement(\"div\", {\n        className: \"row mb2 button-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"toggle-planet btn btn-warning btn-lg\",\n        onClick: this.toggleRandomPlanet,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Toggle Random Planet\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return console.log(_this2.TestFireBase.getAllPeople().then(function (hit) {\n            return console.log(hit);\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \" push \"), React.createElement(ErrorButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: PeoplePage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/PeoplePAge\",\n        component: PlanetPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/PlanetPage\",\n        component: PeoplePage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/starships\",\n        component: PeoplePage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["d:\\My\\react\\star-db\\src\\components\\app\\app.js"],"names":["React","Component","BrowserRouter","Router","Route","IndexRoute","Header","RandomPlanet","ErrorButton","ErrorIndicator","PeoplePage","PlanetPage","TestFireBase","App","state","showRandomPlanet","hasError","toggleRandomPlanet","console","log","props","setState","planet","test","path","getAllPeople","then","hit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route, IndexRoute} from 'react-router-dom';\n//BrowserRouter\nimport Header from '../header';\nimport RandomPlanet from '../random-planet';\nimport ErrorButton from '../error-button';\nimport ErrorIndicator from '../error-indicator';\nimport PeoplePage from '../people-page';\nimport PlanetPage from '../planet-page';\nimport TestFireBase from '../../services/test-firebase'\n\n\nimport './app.css';\n\nexport default class App extends Component {\n  TestFireBase = new TestFireBase;\n  state = {\n    showRandomPlanet: true,\n    hasError: false\n  };\n\n  toggleRandomPlanet = () => { \n     console.log(this.props);\n    console.log('hi');\n  \n    this.setState((state) => {\n      return {\n        showRandomPlanet: !state.showRandomPlanet\n      }\n    });\n  };\n\n  componentDidCatch() {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n\n    if (this.state.hasError) {\n      return <ErrorIndicator />\n    }\n\n    const planet = this.state.showRandomPlanet ?\n      <RandomPlanet/> :\n      null;\nconst test=this.props.path;\n    return (\n    <Router>\n    <div classNam=\"stardb-app\">\n        <Header />\n        { planet }\n\n        <div className=\"row mb2 button-row\">\n          <button\n            className=\"toggle-planet btn btn-warning btn-lg\"\n            onClick={this.toggleRandomPlanet}>\n            Toggle Random Planet  \n                    </button>\n             <button onClick={()=>console.log(this.TestFireBase.getAllPeople().then((hit)=>console.log(hit)))}> push </button>      \n          \n          <ErrorButton />\n        </div>\n\n        <Route exact path = '/' component ={PeoplePage} />\n        <Route path = '/PeoplePAge' component= { PlanetPage}/>\n        <Route path = '/PlanetPage' component= { PeoplePage}/>\n        <Route path = '/starships' component= { PeoplePage}/>\n        \n\n      </div>\n      </Router>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}