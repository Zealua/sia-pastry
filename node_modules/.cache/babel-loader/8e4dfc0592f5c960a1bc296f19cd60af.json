{"ast":null,"code":"import _classCallCheck from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"d:\\\\My\\\\react\\\\star-db\\\\src\\\\Componennt\\\\itom-list\\\\itom-list.js\";\nimport React from 'react';\nimport './itom-list.css';\n\nvar ItomList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ItomList, _React$Component);\n\n  function ItomList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ItomList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ItomList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      list: []\n    };\n\n    _this.getAllItomList = function () {\n      var getlist = _this.props.setParamList;\n      getlist().then(function (rez) {\n        _this.setState({\n          list: rez\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ItomList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getAllItomList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //  const {usinItem} = this.props;\n      var count = 1;\n      console.log(this.state.list);\n      var element = this.state.list.map(function (el) {\n        var id = count++;\n        var name = el.name,\n            eye_color = el.eye_color;\n        return React.createElement(\"li\", {\n          key: id,\n          className: \"list-group-item\" // onClick={()=>usinItem(id,type)}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, name, \" and \", eye_color);\n      });\n      return React.createElement(\"ul\", {\n        className: \"list-group zeal-test\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, element);\n    }\n  }]);\n\n  return ItomList;\n}(React.Component);\n\nexport { ItomList as default };\n;","map":{"version":3,"sources":["d:\\My\\react\\star-db\\src\\Componennt\\itom-list\\itom-list.js"],"names":["React","ItomList","state","list","getAllItomList","getlist","props","setParamList","then","rez","setState","count","console","log","element","map","el","id","name","eye_color","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,iBAAP;;IAEqBC,Q;;;;;;;;;;;;;;;;;UAErBC,K,GAAO;AACJC,MAAAA,IAAI,EAAC;AADD,K;;UASPC,c,GAAiB,YAAM;AACvB,UAAMC,OAAO,GAAC,MAAKC,KAAL,CAAWC,YAAzB;AACAF,MAAAA,OAAO,GAAGG,IAAV,CAAe,UAACC,GAAD,EAAO;AACnB,cAAKC,QAAL,CAAc;AAACP,UAAAA,IAAI,EAACM;AAAN,SAAd;AACF,OAFD;AAGC,K;;;;;;;wCAVkB;AAChB,WAAKL,cAAL;AACF;;;6BAUO;AACP;AACE,UAAIO,KAAK,GAAE,CAAX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWC,IAAvB;AACA,UAAMW,OAAO,GAAG,KAAKZ,KAAL,CAAWC,IAAX,CAAgBY,GAAhB,CAAoB,UAACC,EAAD,EAAM;AAC9B,YAAMC,EAAE,GAAGN,KAAK,EAAhB;AAD8B,YAEvBO,IAFuB,GAEJF,EAFI,CAEvBE,IAFuB;AAAA,YAEjBC,SAFiB,GAEJH,EAFI,CAEjBG,SAFiB;AAG9B,eACI;AAAI,UAAA,GAAG,EAAGF,EAAV;AAAc,UAAA,SAAS,EAAC,iBAAxB,CACI;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEMC,IAFN,WAEiBC,SAFjB,CADJ;AAKV,OARc,CAAhB;AAWA,aACO;AAAI,QAAA,SAAS,EAAG,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIL,OADJ,CADP;AAKF;;;;EAtCqCd,KAAK,CAACoB,S;;SAAvBnB,Q;AAuCpB","sourcesContent":["import React from 'react';\r\n\r\nimport './itom-list.css';\r\n\r\nexport default class ItomList extends React.Component {\r\n\r\nstate= {\r\n   list:[]\r\n}\r\n\r\ncomponentDidMount(){\r\n   this.getAllItomList();\r\n}\r\n\r\n\r\ngetAllItomList = () => {\r\nconst getlist=this.props.setParamList;\r\ngetlist().then((rez)=>{\r\n   this.setState({list:rez});\r\n});\r\n}\r\n\r\nrender(){ \r\n //  const {usinItem} = this.props;\r\n   let count =1; \r\n   console.log(this.state.list);\r\n   const element = this.state.list.map((el)=>{\r\n               const id = count++;\r\n               const {name, eye_color} = el;\r\n               return (\r\n                   <li key ={id} className=\"list-group-item\"\r\n                       // onClick={()=>usinItem(id,type)}\r\n                       >{name} and {eye_color}</li>\r\n               );\r\n    });\r\n\r\n\r\n   return(\r\n          <ul className = \"list-group zeal-test\">\r\n             {element}\r\n         </ul>\r\n   );\r\n};\r\n};"]},"metadata":{},"sourceType":"module"}