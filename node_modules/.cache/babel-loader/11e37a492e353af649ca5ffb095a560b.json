{"ast":null,"code":"import _regeneratorRuntime from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\nvar SwapiService =\n/*#__PURE__*/\nfunction () {\n  function SwapiService() {\n    _classCallCheck(this, SwapiService);\n\n    this._apiBase = 'https://swapi.co/api';\n  }\n\n  _createClass(SwapiService, [{\n    key: \"getResourse\",\n    value: function () {\n      var _getResourse = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(url) {\n        var res, body;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"\".concat(this._apiBase).concat(url));\n\n              case 2:\n                res = _context.sent;\n\n                if (res.ok) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error('missing ' + res.status);\n\n              case 5:\n                _context.next = 7;\n                return res.json();\n\n              case 7:\n                body = _context.sent;\n                return _context.abrupt(\"return\", body);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getResourse(_x) {\n        return _getResourse.apply(this, arguments);\n      }\n\n      return getResourse;\n    }()\n  }, {\n    key: \"getAllPeople\",\n    value: function () {\n      var _getAllPeople = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.getResourse(\"/people/\");\n\n              case 2:\n                res = _context2.sent;\n                return _context2.abrupt(\"return\", res.results);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getAllPeople() {\n        return _getAllPeople.apply(this, arguments);\n      }\n\n      return getAllPeople;\n    }()\n  }, {\n    key: \"getPerson\",\n    value: function () {\n      var _getPerson = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(id) {\n        var el, person;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.getResourse(\"/people/\".concat(id, \"/\"));\n\n              case 2:\n                el = _context3.sent;\n                person = {\n                  id: id,\n                  name: el.name,\n                  gender: el.gender,\n                  birth_year: el.birth_year,\n                  eye_color: el.eye_color\n                };\n                return _context3.abrupt(\"return\", person);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getPerson(_x2) {\n        return _getPerson.apply(this, arguments);\n      }\n\n      return getPerson;\n    }()\n  }, {\n    key: \"getAllStarships\",\n    value: function () {\n      var _getAllStarships = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.getResourse(\"/starships/\");\n\n              case 2:\n                res = _context4.sent;\n                return _context4.abrupt(\"return\", res.results);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getAllStarships() {\n        return _getAllStarships.apply(this, arguments);\n      }\n\n      return getAllStarships;\n    }()\n  }, {\n    key: \"getStarShip\",\n    value: function getStarShip(id) {\n      return this.getResourse(\"/starships/\".concat(id, \"/\"));\n    }\n  }, {\n    key: \"getAllPlanets\",\n    value: function () {\n      var _getAllPlanets = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.getResourse(\"/planets/\");\n\n              case 2:\n                res = _context5.sent;\n                return _context5.abrupt(\"return\", res.results);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function getAllPlanets() {\n        return _getAllPlanets.apply(this, arguments);\n      }\n\n      return getAllPlanets;\n    }()\n  }, {\n    key: \"getPlanet\",\n    value: function () {\n      var _getPlanet = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(id) {\n        var el, planet;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.getResourse(\"/planets/\".concat(id, \"/\"));\n\n              case 2:\n                el = _context6.sent;\n                planet = {\n                  id: id,\n                  name: el.name,\n                  population: el.population,\n                  rotation_period: el.rotation_period,\n                  diameter: el.diameter,\n                  climate: el.climate,\n                  surface_water: el.surface_water\n                };\n                return _context6.abrupt(\"return\", planet);\n\n              case 5:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function getPlanet(_x3) {\n        return _getPlanet.apply(this, arguments);\n      }\n\n      return getPlanet;\n    }()\n  }]);\n\n  return SwapiService;\n}();\n\nexport { SwapiService as default };","map":{"version":3,"sources":["d:\\My\\react\\star-db\\src\\Services\\swapi-service.js"],"names":["SwapiService","_apiBase","url","fetch","res","ok","Error","status","json","body","getResourse","results","id","el","person","name","gender","birth_year","eye_color","planet","population","rotation_period","diameter","climate","surface_water"],"mappings":";;;;;IAAqBA,Y;;;;;;SAEjBC,Q,GAAW,sB;;;;;;;;gDAEQC,G;;;;;;;uBACGC,KAAK,WAAI,KAAKF,QAAT,SAAoBC,GAApB,E;;;AAAjBE,gBAAAA,G;;oBAEFA,GAAG,CAACC,E;;;;;sBACE,IAAIC,KAAJ,CAAY,aAAWF,GAAG,CAACG,MAA3B,C;;;;uBAESH,GAAG,CAACI,IAAJ,E;;;AAAbC,gBAAAA,I;iDACCA,I;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAIW,KAAKC,WAAL,Y;;;AAAZN,gBAAAA,G;kDACCA,GAAG,CAACO,O;;;;;;;;;;;;;;;;;;;;;iDAGCC,E;;;;;;;uBACK,KAAKF,WAAL,mBAA4BE,EAA5B,O;;;AAAXC,gBAAAA,E;AACAC,gBAAAA,M,GAAS;AACXF,kBAAAA,EAAE,EAAFA,EADW;AAEXG,kBAAAA,IAAI,EAACF,EAAE,CAACE,IAFG;AAGfC,kBAAAA,MAAM,EAACH,EAAE,CAACG,MAHK;AAIfC,kBAAAA,UAAU,EAACJ,EAAE,CAACI,UAJC;AAKfC,kBAAAA,SAAS,EAACL,EAAE,CAACK;AALE,iB;kDAMRJ,M;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAIW,KAAKJ,WAAL,e;;;AAAZN,gBAAAA,G;kDACCA,GAAG,CAACO,O;;;;;;;;;;;;;;;;;;gCAGHC,E,EAAG;AACX,aAAO,KAAKF,WAAL,sBAA+BE,EAA/B,OAAP;AACH;;;;;;;;;;;;;uBAGqB,KAAKF,WAAL,a;;;AAAZN,gBAAAA,G;kDACCA,GAAG,CAACO,O;;;;;;;;;;;;;;;;;;;;;iDAGCC,E;;;;;;;uBACK,KAAKF,WAAL,oBAA6BE,EAA7B,O;;;AAAXC,gBAAAA,E;AACAM,gBAAAA,M,GAAO;AAACP,kBAAAA,EAAE,EAACA,EAAJ;AACTG,kBAAAA,IAAI,EAACF,EAAE,CAACE,IADC;AAETK,kBAAAA,UAAU,EAACP,EAAE,CAACO,UAFL;AAGTC,kBAAAA,eAAe,EAACR,EAAE,CAACQ,eAHV;AAITC,kBAAAA,QAAQ,EAACT,EAAE,CAACS,QAJH;AAKTC,kBAAAA,OAAO,EAACV,EAAE,CAACU,OALF;AAMTC,kBAAAA,aAAa,EAACX,EAAE,CAACW;AANR,iB;kDAONL,M;;;;;;;;;;;;;;;;;;;;;SArDMnB,Y","sourcesContent":["export default class SwapiService {\r\n\r\n    _apiBase = 'https://swapi.co/api';\r\n\r\n    async getResourse (url) {\r\n        const res = await fetch(`${this._apiBase}${url}`); \r\n\r\n        if(!res.ok){\r\n            throw new Error ( 'missing '+res.status);\r\n        }\r\n        const body = await res.json();\r\n        return body;\r\n    };\r\n\r\n    async getAllPeople(){\r\n        const res = await this.getResourse(`/people/`);\r\n        return res.results;\r\n    }\r\n    \r\n    async getPerson(id){\r\n        const el = await this.getResourse(`/people/${id}/`);\r\n        const person = {\r\n            id,\r\n            name:el.name,\r\n        gender:el.gender,\r\n        birth_year:el.birth_year,\r\n        eye_color:el.eye_color};\r\n        return person;\r\n    } \r\n    \r\n    async getAllStarships(){\r\n        const res = await this.getResourse(`/starships/`);\r\n        return res.results;\r\n    }\r\n    \r\n    getStarShip(id){\r\n        return this.getResourse(`/starships/${id}/`);\r\n    }   \r\n\r\n    async getAllPlanets(){\r\n        const res = await this.getResourse(`/planets/`);\r\n        return res.results;\r\n    }\r\n    \r\n    async getPlanet(id){\r\n        const el = await this.getResourse(`/planets/${id}/`)\r\n        const planet={id:id,\r\n            name:el.name,\r\n            population:el.population,\r\n            rotation_period:el.rotation_period,\r\n            diameter:el.diameter,\r\n            climate:el.climate,\r\n            surface_water:el.surface_water}\r\n        return planet;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}