{"ast":null,"code":"import _regeneratorRuntime from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nconsole.log('Hi there');\n\nvar SwapiService =\n/*#__PURE__*/\nfunction () {\n  function SwapiService() {\n    _classCallCheck(this, SwapiService);\n\n    this._apiBase = 'https://swapi.co/api';\n  }\n\n  _createClass(SwapiService, [{\n    key: \"getResourse\",\n    value: function () {\n      var _getResourse = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(url) {\n        var res, body;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"\".concat(this._apiBase).concat(url));\n\n              case 2:\n                res = _context.sent;\n\n                if (res.ok) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error('missing ' + res.status);\n\n              case 5:\n                _context.next = 7;\n                return res.json();\n\n              case 7:\n                body = _context.sent;\n                return _context.abrupt(\"return\", body);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getResourse(_x) {\n        return _getResourse.apply(this, arguments);\n      }\n\n      return getResourse;\n    }()\n  }, {\n    key: \"getAllPeople\",\n    value: function () {\n      var _getAllPeople = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.getResourse(\"/people/\");\n\n              case 2:\n                res = _context2.sent;\n                return _context2.abrupt(\"return\", res.results);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getAllPeople() {\n        return _getAllPeople.apply(this, arguments);\n      }\n\n      return getAllPeople;\n    }()\n  }, {\n    key: \"getPerson\",\n    value: function getPerson(id) {\n      return this.getResourse(\"/people/\".concat(id, \"/\"));\n    }\n  }]);\n\n  return SwapiService;\n}();\n\nvar swapi = new SwapiService();\nswapi.getAllPeople().then(function (people) {\n  people.forEach(function (p) {\n    console.log(p.name);\n  });\n}); // const getResourse = async (url) => {\n//     const res = await fetch(url); \n//     if(!res.ok){\n//         throw new Error ( 'missing '+res.status);\n//     }\n//     const body = await res.json();\n//     return body;\n// };\n// getResourse ('https://swapi.co/api/people/1/')\n//       .then((body)=>{\n//           console.log(body);\n//       })\n//       .catch((err)=>{                // false networks\n//           console.log(err);\n//       });\n// fetch('https://swapi.co/api/people/1/')\n//       .then((res)=>{\n//           console.log(res.status);\n//           return res.json();\n//       })\n//       .then((body)=>{\n//           console.log(body);\n//       });","map":{"version":3,"sources":["d:\\My\\react\\star-db\\src\\index.js"],"names":["console","log","SwapiService","_apiBase","url","fetch","res","ok","Error","status","json","body","getResourse","results","id","swapi","getAllPeople","then","people","forEach","p","name"],"mappings":";;;;AAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;;IAGMC,Y;;;;;;SAEFC,Q,GAAW,sB;;;;;;;;gDAEQC,G;;;;;;;uBACGC,KAAK,WAAI,KAAKF,QAAT,SAAoBC,GAApB,E;;;AAAjBE,gBAAAA,G;;oBAEFA,GAAG,CAACC,E;;;;;sBACE,IAAIC,KAAJ,CAAY,aAAWF,GAAG,CAACG,MAA3B,C;;;;uBAESH,GAAG,CAACI,IAAJ,E;;;AAAbC,gBAAAA,I;iDACCA,I;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAIW,KAAKC,WAAL,Y;;;AAAZN,gBAAAA,G;kDACCA,GAAG,CAACO,O;;;;;;;;;;;;;;;;;;8BAELC,E,EAAG;AACT,aAAO,KAAKF,WAAL,mBAA4BE,EAA5B,OAAP;AACH;;;;;;AAIL,IAAMC,KAAK,GAAG,IAAIb,YAAJ,EAAd;AAEAa,KAAK,CAACC,YAAN,GAAqBC,IAArB,CAA0B,UAACC,MAAD,EAAU;AAChCA,EAAAA,MAAM,CAACC,OAAP,CAAe,UAACC,CAAD,EAAO;AACjBpB,IAAAA,OAAO,CAACC,GAAR,CAAYmB,CAAC,CAACC,IAAd;AACJ,GAFD;AAGH,CAJD,E,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["console.log('Hi there');\n\n\nclass SwapiService {\n\n    _apiBase = 'https://swapi.co/api';\n\n    async getResourse (url) {\n        const res = await fetch(`${this._apiBase}${url}`); \n\n        if(!res.ok){\n            throw new Error ( 'missing '+res.status);\n        }\n        const body = await res.json();\n        return body;\n    };\n    \n    async getAllPeople(){\n        const res = await this.getResourse(`/people/`);\n        return res.results;\n    }\n    getPerson(id){\n        return this.getResourse(`/people/${id}/`);\n    }\n}\n\n\nconst swapi = new SwapiService();\n\nswapi.getAllPeople().then((people)=>{\n    people.forEach((p) => {\n         console.log(p.name);        \n    });\n});\n\n\n\n\n// const getResourse = async (url) => {\n//     const res = await fetch(url); \n//     if(!res.ok){\n//         throw new Error ( 'missing '+res.status);\n//     }\n//     const body = await res.json();\n//     return body;\n// };\n\n// getResourse ('https://swapi.co/api/people/1/')\n//       .then((body)=>{\n//           console.log(body);\n//       })\n//       .catch((err)=>{                // false networks\n//           console.log(err);\n//       });\n\n// fetch('https://swapi.co/api/people/1/')\n//       .then((res)=>{\n//           console.log(res.status);\n//           return res.json();\n//       })\n//       .then((body)=>{\n//           console.log(body);\n//       });"]},"metadata":{},"sourceType":"module"}