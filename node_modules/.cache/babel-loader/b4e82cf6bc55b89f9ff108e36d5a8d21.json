{"ast":null,"code":"import _classCallCheck from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"d:\\\\My\\\\react\\\\star-db\\\\src\\\\components\\\\person-details\\\\person-details.js\";\nimport React, { Component } from 'react';\nimport './person-details.css';\nimport SwapiService from \"../../services/swapi-service\";\nimport ErrorButton from \"../error-button/error-button\";\n\nvar PersonDetails =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PersonDetails, _Component);\n\n  function PersonDetails() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PersonDetails);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PersonDetails)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.swapiService = new SwapiService();\n    _this.state = {\n      person: null\n    };\n    return _this;\n  }\n\n  _createClass(PersonDetails, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updatePerson();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.personId !== prevProps.personId) {\n        this.updatePerson();\n      }\n    }\n  }, {\n    key: \"updatePerson\",\n    value: function updatePerson() {\n      var _this2 = this;\n\n      var personId = this.props.personId;\n\n      if (!personId) {\n        return;\n      }\n\n      this.swapiService.getPerson(personId).then(function (person) {\n        _this2.setState({\n          person: person\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var person = this.state.person;\n\n      if (!person) {\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, \"Select a person from a list\");\n      }\n\n      var id = person.id,\n          name = person.name,\n          gender = person.gender,\n          birthYear = person.birthYear,\n          eyeColor = person.eyeColor;\n      return React.createElement(\"div\", {\n        className: \"person-details card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"person-image\",\n        src: \"https://starwars-visualguide.com/assets/img/characters/\".concat(id, \".jpg\"),\n        alt: \"character\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, name), React.createElement(\"ul\", {\n        className: \"list-group list-group-flush\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"term\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Gender\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, gender)), React.createElement(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"term\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Birth Year\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, birthYear)), React.createElement(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"term\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Eye Color\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, eyeColor))), React.createElement(ErrorButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return PersonDetails;\n}(Component);\n\nexport { PersonDetails as default };","map":{"version":3,"sources":["d:\\My\\react\\star-db\\src\\components\\person-details\\person-details.js"],"names":["React","Component","SwapiService","ErrorButton","PersonDetails","swapiService","state","person","updatePerson","prevProps","props","personId","getPerson","then","setState","id","name","gender","birthYear","eyeColor"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,sBAAP;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;;IAEqBC,a;;;;;;;;;;;;;;;;;UAEnBC,Y,GAAe,IAAIH,YAAJ,E;UAEfI,K,GAAQ;AACNC,MAAAA,MAAM,EAAE;AADF,K;;;;;;wCAIY;AAClB,WAAKC,YAAL;AACD;;;uCAEkBC,S,EAAW;AAC5B,UAAI,KAAKC,KAAL,CAAWC,QAAX,KAAwBF,SAAS,CAACE,QAAtC,EAAgD;AAC9C,aAAKH,YAAL;AACD;AACF;;;mCAEc;AAAA;;AAAA,UACLG,QADK,GACQ,KAAKD,KADb,CACLC,QADK;;AAEb,UAAI,CAACA,QAAL,EAAe;AACb;AACD;;AAED,WAAKN,YAAL,CACGO,SADH,CACaD,QADb,EAEGE,IAFH,CAEQ,UAACN,MAAD,EAAY;AAChB,QAAA,MAAI,CAACO,QAAL,CAAc;AAAEP,UAAAA,MAAM,EAANA;AAAF,SAAd;AACD,OAJH;AAKD;;;6BAEQ;AAAA,UAECA,MAFD,GAEY,KAAKD,KAFjB,CAECC,MAFD;;AAGP,UAAI,CAACA,MAAL,EAAa;AACX,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAP;AACD;;AALM,UAOCQ,EAPD,GAQ2BR,MAR3B,CAOCQ,EAPD;AAAA,UAOKC,IAPL,GAQ2BT,MAR3B,CAOKS,IAPL;AAAA,UAOWC,MAPX,GAQ2BV,MAR3B,CAOWU,MAPX;AAAA,UAQGC,SARH,GAQ2BX,MAR3B,CAQGW,SARH;AAAA,UAQcC,QARd,GAQ2BZ,MAR3B,CAQcY,QARd;AAUP,aACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,cAAf;AACE,QAAA,GAAG,mEAA4DJ,EAA5D,SADL;AAEE,QAAA,GAAG,EAAC,WAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKC,IAAL,CADF,EAEE;AAAI,QAAA,SAAS,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOC,MAAP,CAFF,CADF,EAKE;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOC,SAAP,CAFF,CALF,EASE;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOC,QAAP,CAFF,CATF,CAFF,EAgBE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBF,CALF,CADF;AA0BD;;;;EAnEwClB,S;;SAAtBG,a","sourcesContent":["import React, { Component } from 'react';\n\nimport './person-details.css';\nimport SwapiService from \"../../services/swapi-service\";\nimport ErrorButton from \"../error-button/error-button\";\n\nexport default class PersonDetails extends Component {\n\n  swapiService = new SwapiService();\n\n  state = {\n    person: null\n  };\n\n  componentDidMount() {\n    this.updatePerson();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.personId !== prevProps.personId) {\n      this.updatePerson();\n    }\n  }\n\n  updatePerson() {\n    const { personId } = this.props;\n    if (!personId) {\n      return;\n    }\n\n    this.swapiService\n      .getPerson(personId)\n      .then((person) => {\n        this.setState({ person });\n      });\n  }\n\n  render() {\n\n    const { person } = this.state;\n    if (!person) {\n      return <span>Select a person from a list</span>;\n    }\n\n    const { id, name, gender,\n              birthYear, eyeColor } = person;\n\n    return (\n      <div className=\"person-details card\">\n        <img className=\"person-image\"\n          src={`https://starwars-visualguide.com/assets/img/characters/${id}.jpg`}\n          alt=\"character\"/>\n\n        <div className=\"card-body\">\n          <h4>{name}</h4>\n          <ul className=\"list-group list-group-flush\">\n            <li className=\"list-group-item\">\n              <span className=\"term\">Gender</span>\n              <span>{gender}</span>\n            </li>\n            <li className=\"list-group-item\">\n              <span className=\"term\">Birth Year</span>\n              <span>{birthYear}</span>\n            </li>\n            <li className=\"list-group-item\">\n              <span className=\"term\">Eye Color</span>\n              <span>{eyeColor}</span>\n            </li>\n          </ul>\n          <ErrorButton />\n        </div>\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}