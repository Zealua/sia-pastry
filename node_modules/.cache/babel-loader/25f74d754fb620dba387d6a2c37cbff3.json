{"ast":null,"code":"import _classCallCheck from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"d:\\\\My\\\\react\\\\star-db\\\\src\\\\Componennt\\\\random-planet\\\\random-planet.js\";\nimport React from 'react';\nimport SwapiService from '../../Services/swapi-service';\nimport './random-planet.css';\n\nvar RandomPlanet =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RandomPlanet, _React$Component);\n\n  function RandomPlanet() {\n    var _this;\n\n    _classCallCheck(this, RandomPlanet);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RandomPlanet).call(this));\n    _this.state = {\n      planetS: {\n        id: '',\n        name: \"\",\n        population: '',\n        rotation_period: \"\",\n        diameter: ''\n      }\n    };\n    _this.swip = new SwapiService();\n\n    _this.updatePlanet();\n\n    return _this;\n  }\n\n  _createClass(RandomPlanet, [{\n    key: \"updatePlanet\",\n    value: function updatePlanet() {\n      var _this2 = this;\n\n      var id = Math.floor(Math.random() * 27 + 2);\n      this.swip.getPlanet(id).then(function (el) {\n        _this2.setState({\n          planetS: el //   id:id,\n          //   name:el.name,\n          //   population:el.population,\n          //   rotation_period:el.rotation_period,\n          //   diameter:el.diameter\n\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //const {name, rotation_period,orbital_period,diameter }=planetC;\n      // console.log(name +' '+ rotation_period+\" \"+orbital_period+' '+diameter)   \n      return React.createElement(\"div\", {\n        className: \"random-planet list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"planet-image\",\n        src: \"https://starwars-visualguide.com/assets/img/planets/\".concat(this.state.id, \".jpg\"),\n        alt: \"pict show: \".concat(this.state.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"flex-column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"test\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.state.name), React.createElement(\"ul\", {\n        className: \"list-group-flash\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \" list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"term\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Population  \"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, this.state.population)), React.createElement(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"term\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Rotation Period\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, this.state.rotation_period)), React.createElement(\"li\", {\n        className: \" list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"term\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Diametr\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.state.diameter)))));\n    }\n  }]);\n\n  return RandomPlanet;\n}(React.Component);\n\nexport { RandomPlanet as default };","map":{"version":3,"sources":["d:\\My\\react\\star-db\\src\\Componennt\\random-planet\\random-planet.js"],"names":["React","SwapiService","RandomPlanet","state","planetS","id","name","population","rotation_period","diameter","swip","updatePlanet","Math","floor","random","getPlanet","then","el","setState","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA,OAAO,qBAAP;;IAEqBC,Y;;;;;AAYlB,0BAAa;AAAA;;AAAA;;AACT;AADS,UAVbC,KAUa,GAVL;AACJC,MAAAA,OAAO,EAAG;AACNC,QAAAA,EAAE,EAAC,EADG;AAECC,QAAAA,IAAI,EAAC,EAFN;AAGCC,QAAAA,UAAU,EAAC,EAHZ;AAICC,QAAAA,eAAe,EAAE,EAJlB;AAKCC,QAAAA,QAAQ,EAAC;AALV;AADN,KAUK;AAAA,UAMbC,IANa,GAMN,IAAIT,YAAJ,EANM;;AAET,UAAKU,YAAL;;AAFS;AAGZ;;;;mCAMa;AAAA;;AACX,UAAMN,EAAE,GAAGO,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,EAAd,GAAiB,CAA5B,CAAX;AACA,WAAKJ,IAAL,CAAUK,SAAV,CAAoBV,EAApB,EACKW,IADL,CACU,UAACC,EAAD,EAAM;AACL,QAAA,MAAI,CAACC,QAAL,CAAc;AAACd,UAAAA,OAAO,EAACa,EAAT,CACX;AACA;AACA;AACA;AACA;;AALW,SAAd;AAOZ,OATC;AASE;;;6BAEK;AAGV;AACD;AAEC,aACI;AAAO,QAAA,SAAS,EAAC,+BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,cAAf;AACI,QAAA,GAAG,gEAA2D,KAAKd,KAAL,CAAWE,EAAtE,SADP;AACuF,QAAA,GAAG,uBAAkB,KAAKF,KAAL,CAAWE,EAA7B,CAD1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAGE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM;AAAI,QAAA,SAAS,EAAG,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwB,KAAKF,KAAL,CAAWG,IAAnC,CADN,EAEC;AAAI,QAAA,SAAS,EAAG,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACO;AAAM,QAAA,SAAS,EAAE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADP,EAEO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKH,KAAL,CAAWI,UAAlB,CAFP,CADH,EAKM;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKJ,KAAL,CAAWK,eAAlB,CAFJ,CALN,EASM;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKL,KAAL,CAAWM,QAAlB,CAFJ,CATN,CAFD,CAHF,CADJ;AAwBF;;;;EAhEyCT,KAAK,CAACmB,S;;SAA3BjB,Y","sourcesContent":["import React from 'react'\r\nimport SwapiService from '../../Services/swapi-service'\r\n\r\nimport './random-planet.css'\r\n\r\nexport default class RandomPlanet extends React.Component {\r\n\r\n   state = {\r\n       planetS : {\r\n           id:'',\r\n                  name:\"\",\r\n                  population:'',\r\n                  rotation_period: \"\",\r\n                  diameter:''\r\n                }\r\n   }\r\n\r\n   constructor(){\r\n       super();\r\n       this.updatePlanet();\r\n   }\r\n\r\n\r\n   swip = new SwapiService();\r\n \r\n   \r\n   updatePlanet(){\r\n      const id = Math.floor(Math.random()*27+2);\r\n      this.swip.getPlanet(id)\r\n          .then((el)=>{\r\n                 this.setState({planetS:el\r\n                    //   id:id,\r\n                    //   name:el.name,\r\n                    //   population:el.population,\r\n                    //   rotation_period:el.rotation_period,\r\n                    //   diameter:el.diameter\r\n                    });    \r\n    });};\r\n\r\n     render(){ \r\n  \r\n\r\n   //const {name, rotation_period,orbital_period,diameter }=planetC;\r\n  // console.log(name +' '+ rotation_period+\" \"+orbital_period+' '+diameter)   \r\n\r\n   return(\r\n       <div   className=\"random-planet list-group-item\">\r\n         <img className=\"planet-image\"\r\n             src = {`https://starwars-visualguide.com/assets/img/planets/${this.state.id}.jpg`} alt = {`pict show: ${this.state.id}`}/>\r\n         <div className=\"flex-column\"> \r\n               <h4 className = \"test\">{this.state.name}</h4>\r\n          <ul className = \"list-group-flash\">\r\n             <li className=\" list-group-item\">\r\n                    <span className= \"term\">Population  </span>\r\n                    <span>{this.state.population}</span>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                    <span className= \"term\">Rotation Period</span>\r\n                    <span>{this.state.rotation_period}</span>\r\n                </li>\r\n                <li className=\" list-group-item\">\r\n                    <span className= \"term\">Diametr</span>\r\n                    <span>{this.state.diameter}</span>\r\n                </li>\r\n             </ul>\r\n        </div>\r\n            \r\n       </div>\r\n   );\r\n};\r\n}\r\n"]},"metadata":{},"sourceType":"module"}