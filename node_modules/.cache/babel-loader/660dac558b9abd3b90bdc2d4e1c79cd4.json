{"ast":null,"code":"import _classCallCheck from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"d:\\\\My\\\\react\\\\star-db\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"d:\\\\My\\\\react\\\\star-db\\\\src\\\\Componennt\\\\person-detales\\\\person-detales.js\";\nimport React from 'react';\nimport SwapiService from '../../Services/swapi-service';\nimport './person-detales.css';\n\nvar PersonDetales =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PersonDetales, _React$Component);\n\n  function PersonDetales() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PersonDetales);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PersonDetales)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      personData: {}\n    };\n\n    _this.updatePersonData = function (id) {\n      var swapi = new SwapiService();\n      swapi.getPerson(id).then(function (person) {\n        return _this.setState(function () {\n          return {\n            personData: person\n          };\n        });\n      });\n      console.log(_this.state.personData);\n    };\n\n    return _this;\n  }\n\n  _createClass(PersonDetales, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.updatePersonData(this.props.person);\n      console.log(this.state.personData);\n      setInterval(function () {\n        console.log(_this2.state.personData);\n        return;\n      }, 3000);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(props) {\n      if (this.props.person !== props.person) {\n        this.updatePersonData(this.props.person);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //    const { name, data } = this.personData;\n      // let ShowInfo;\n      //    const {name} = this.state.person;\n      // const ListData = () => data.map(\n      //     (el) => {\n      //         return (<li className=\"list-group-item\">{el}</li>);\n      //     });\n      // const ShowInfoData = () => {\n      //     return (\n      //         <div className=\"random-planet list-group-item\">\n      //             <img className=\"Person-image\"\n      //                 src={`https://starwars-visualguide.com/assets/img/characters/${this.props.person}.jpg`} alt='pict show' />\n      //             <div className=\"flex-column\">\n      //                 <h4 className=\"test\">{name}</h4>\n      //                 {/* <ul className=\"list-group-flash\">\n      //                     <ListData />\n      //                 </ul> */}\n      //             </div>\n      //         </div>);\n      // };\n      //            ShowInfo = ShowInfoData;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Test\"));\n    }\n  }]);\n\n  return PersonDetales;\n}(React.Component);\n\nexport { PersonDetales as default };","map":{"version":3,"sources":["d:\\My\\react\\star-db\\src\\Componennt\\person-detales\\person-detales.js"],"names":["React","SwapiService","PersonDetales","state","personData","updatePersonData","id","swapi","getPerson","then","person","setState","console","log","props","setInterval","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA,OAAO,sBAAP;;IAEqBC,a;;;;;;;;;;;;;;;;;UAEjBC,K,GAAM;AACFC,MAAAA,UAAU,EAAC;AADT,K;;UAgBNC,gB,GAAmB,UAACC,EAAD,EAAO;AACzB,UAAMC,KAAK,GAAG,IAAIN,YAAJ,EAAd;AACAM,MAAAA,KAAK,CAACC,SAAN,CAAgBF,EAAhB,EAAoBG,IAApB,CAAyB,UAACC,MAAD;AAAA,eAAU,MAAKC,QAAL,CAAc,YAAI;AACjD,iBAAO;AAACP,YAAAA,UAAU,EAACM;AAAZ,WAAP;AAA4B,SADG,CAAV;AAAA,OAAzB;AAEAE,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKV,KAAL,CAAWC,UAAvB;AACA,K;;;;;;;wCAlBkB;AAAA;;AACf,WAAKC,gBAAL,CAAsB,KAAKS,KAAL,CAAWJ,MAAjC;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWC,UAAvB;AACAW,MAAAA,WAAW,CAAC,YAAI;AAACH,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAI,CAACV,KAAL,CAAWC,UAAvB;AACA;AAAa,OADnB,EACoB,IADpB,CAAX;AAEH;;;uCAEkBU,K,EAAM;AACrB,UAAG,KAAKA,KAAL,CAAWJ,MAAX,KAAoBI,KAAK,CAACJ,MAA7B,EAAoC;AAChC,aAAKL,gBAAL,CAAsB,KAAKS,KAAL,CAAWJ,MAAjC;AACH;AACJ;;;6BASQ;AACT;AACG;AACH;AAEQ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEZ;AAEQ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFH,CADJ;AAOH;;;;EAzDsCV,KAAK,CAACgB,S;;SAA5Bd,a","sourcesContent":["import React from 'react'\r\n\r\nimport SwapiService from '../../Services/swapi-service'\r\n\r\nimport './person-detales.css'\r\n\r\nexport default class PersonDetales extends React.Component {\r\n\r\n    state={\r\n        personData:{}\r\n    }\r\n    componentDidMount(){\r\n        this.updatePersonData(this.props.person); \r\n        console.log(this.state.personData);\r\n        setInterval(()=>{console.log(this.state.personData);\r\n                         return ;    },3000);\r\n    }\r\n\r\n    componentDidUpdate(props){\r\n        if(this.props.person!==props.person){\r\n            this.updatePersonData(this.props.person);\r\n        }\r\n    }\r\n\r\n    updatePersonData = (id)=> {\r\n     const swapi = new SwapiService();\r\n     swapi.getPerson(id).then((person)=>this.setState(()=>{\r\n         return {personData:person};}));\r\n     console.log(this.state.personData);\r\n    }\r\n\r\n    render() {\r\n    //    const { name, data } = this.personData;\r\n       // let ShowInfo;\r\n    //    const {name} = this.state.person;\r\n    \r\n            // const ListData = () => data.map(\r\n            //     (el) => {\r\n            //         return (<li className=\"list-group-item\">{el}</li>);\r\n            //     });\r\n            // const ShowInfoData = () => {\r\n            //     return (\r\n            //         <div className=\"random-planet list-group-item\">\r\n            //             <img className=\"Person-image\"\r\n            //                 src={`https://starwars-visualguide.com/assets/img/characters/${this.props.person}.jpg`} alt='pict show' />\r\n            //             <div className=\"flex-column\">\r\n            //                 <h4 className=\"test\">{name}</h4>\r\n            //                 {/* <ul className=\"list-group-flash\">\r\n            //                     <ListData />\r\n            //                 </ul> */}\r\n            //             </div>\r\n            //         </div>);\r\n            // };\r\n\r\n//            ShowInfo = ShowInfoData;\r\n             \r\n        return (\r\n            <div>{\r\n  //              <ShowInfo />\r\n             } <span>Test</span>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}